version: "3.7"

networks:
  internal:
    # name: gbpd
    driver: bridge

volumes:
  mongo:
    # name: mongo

services:
  back:
    image: binomio/gbpd-back:dev
    # domainname: api.gbpd.es
    container_name: gbpd-api
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        # MONGODB_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017,mongo2:27017,mongo3:27017/admin?replicaSet=${MONGO_REPLICA_SET_NAME}=true&w=majority
        # MONGODB_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/dev
        MONGODB_URI: mongodb://mongo:27017/dev
    # environment:
    #   MONGODB_URI: mongodb://internal:$MONGO_DB_ADMIN_PASSWORD@mongo:27017/dev
      # - ATLAS_HOST=mongodb://mongo:27017/dev
    networks:
      internal:
    ports:
      - 3008:3008
    links:
      - mongo
    depends_on:
      - mongo

  front:
    image: binomio/gbpd-front:dev
    # domainname: gbpd.es
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL}
    container_name: gbpd
    # environment:
    #   REACT_APP_API_URL: $REACT_APP_API_URL
    depends_on:
      - back
    networks:
      internal:
    expose:
      - 3000
    ports:
      - 3000:3000
    links:
      - back

  mongo:
    # hostname: mongo
    container_name: mongodb
    image: binomio/mongo
    build:
      context: ./.docker/mongodb
      dockerfile: Dockerfile
      # args:
      #   MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      #   MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    restart: always
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
    #   MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      # MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      # MONGO_INITDB_USERNAME: ${MONGO_INITDB_USERNAME}
      # MONGO_INITDB_PASSWORD: ${MONGO_INITDB_PASSWORD}
    volumes:
      # - mongo:/data/db
      - ./.docker/mongodb/mongod.conf:/etc/mongod.conf
      - ./.docker/mongodb/initdb.d/:/docker-entrypoint-initdb.d/
      - ./.docker/mongodb/data/db/:/data/db/
      - ./.docker/mongodb/data/log/:/var/log/mongodb/
    networks:
      internal:
    expose:
      - 27017
    ports:
    - 27017:27017
    command: ["-f", "/etc/mongod.conf"]
    # build:
    #   context: ./mongo/replica1
    #   dockerfile: Dockerfile

    # healthcheck:
    #   test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo -u $${MONGO_INITDB_ROOT_USERNAME} -p $${MONGO_INITDB_ROOT_PASSWORD} --quiet) -eq 1
    #   interval: 10s
    #   start_period: 30s

  # mongo2:
  #   hostname: mongo2
  #   container_name: mongodb2
  #   image: binomio/mongo
  #   restart: always
  #   expose:
  #     - 27017
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
  #     MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
  #     MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
  #     MONGO_INITDB_USERNAME: ${MONGO_INITDB_USERNAME}
  #     MONGO_INITDB_PASSWORD: ${MONGO_INITDB_PASSWORD}
  #   volumes:
  #     # - mongo:/data/db
  #     - ./.docker/mongodb2/mongod.conf:/etc/mongod.conf
  #     - ./.docker/mongodb2/initdb.d/:/docker-entrypoint-initdb.d/
  #     - ./.docker/mongodb2/data/db/:/data/db/
  #     - ./.docker/mongodb2/data/log/:/var/log/mongodb/
  #   networks:
  #     internal:
  #   ports:
  #   - 27012:27017
  #   command: ["-f", "/etc/mongod.conf"]
  #   build:
  #     context: ./mongo/replica2
  #     dockerfile: Dockerfile

  # mongo3:
  #   hostname: mongo3
  #   container_name: mongodb3
  #   image: binomio/mongo
  #   restart: always
  #   expose:
  #     - 27017
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
  #     MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
  #     MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
  #     MONGO_INITDB_USERNAME: ${MONGO_INITDB_USERNAME}
  #     MONGO_INITDB_PASSWORD: ${MONGO_INITDB_PASSWORD}
  #   volumes:
  #     # - mongo:/data/db
  #     - ./.docker/mongodb3/mongod.conf:/etc/mongod.conf
  #     - ./.docker/mongodb3/initdb.d/:/docker-entrypoint-initdb.d/
  #     - ./.docker/mongodb3/data/db/:/data/db/
  #     - ./.docker/mongodb3/data/log/:/var/log/mongodb/
  #   networks:
  #     internal:
  #   ports:
  #   - 27013:27017
  #   command: ["-f", "/etc/mongod.conf"]
  #   build:
  #     context: ./mongo/replica3
  #     dockerfile: Dockerfile

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      # ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
    networks:
      internal:
    depends_on:
      - mongo

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    volumes:
        - ./.docker/rabbitmq/etc/:/etc/rabbitmq/
        - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
        - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/
    environment:
        RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
        RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
        RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
        - 5672:5672
