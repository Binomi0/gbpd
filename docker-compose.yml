version: "3.7"

networks:
  internal:
    # name: gbpd
    driver: bridge

volumes:
  mongo:
    # name: mongo

services:
  back:
    image: binomio/gbpd-back:dev
    # domainname: api.gbpd.es
    container_name: gbpd-api
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        MONGODB_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/admin?retryWrites=true&w=majority
    # environment:
    #   MONGODB_URI: mongodb://internal:$MONGO_DB_ADMIN_PASSWORD@mongo:27017/dev
      # - ATLAS_HOST=mongodb://mongo:27017/dev
    networks:
      internal:
    ports:
      - 3008:3008
    links:
      - mongo
    depends_on:
      - mongo

  front:
    image: binomio/gbpd-front:dev
    # domainname: gbpd.es
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL}
    container_name: gbpd
    # environment:
    #   REACT_APP_API_URL: $REACT_APP_API_URL
    depends_on:
      - back
    networks:
      internal:
    expose:
      - 3000
    ports:
      - 3000:3000
    links:
      - back

  mongo:
    container_name: mongodb
    image: binomio/mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_INITDB_USERNAME: ${MONGO_INITDB_USERNAME}
      MONGO_INITDB_PASSWORD: ${MONGO_INITDB_PASSWORD}
    volumes:
      # - mongo:/data/db
      # - ./db-init/:/docker-entrypoint-initdb.d
      - ./.docker/mongodb/mongod.conf:/etc/mongod.conf
      - ./.docker/mongodb/initdb.d/:/docker-entrypoint-initdb.d/
      - ./.docker/mongodb/data/db/:/data/db/
      - ./.docker/mongodb/data/log/:/var/log/mongodb/
    networks:
      internal:
    ports:
    - 27017:27017
    command: ["-f", "/etc/mongod.conf"]
    build:
      context: ./mongo
      dockerfile: Dockerfile

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
    networks:
      internal:
    depends_on:
      - mongo

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    volumes:
        - ./.docker/rabbitmq/etc/:/etc/rabbitmq/
        - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
        - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/
    environment:
        RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
        RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
        RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
        - 5672:5672
